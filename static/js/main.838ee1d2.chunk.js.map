{"version":3,"sources":["components/TopButtons.jsx","components/Inputs.jsx","services/WeatherService.jsx","components/TimeAndLocation.jsx","components/TemperatureAndDetails.jsx","components/Forecast.jsx","App.jsx","index.js"],"names":["TopButtons","_ref","setQuery","React","createElement","className","id","title","map","city","key","onClick","q","Inputs","units","setUnits","_useState","useState","_useState2","_slicedToArray","setCity","handleUnitsChange","e","selectedUnit","currentTarget","name","type","value","onChange","placeholder","UilSearch","size","UilLocationPoint","navigator","geolocation","toast","info","getCurrentPosition","position","success","lat","coords","latitude","lon","longitude","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","getWeatherData","infoType","searchParams","url","URL","BASE_URL","search","URLSearchParams","_objectSpread","appid","fetch","res","json","formatCurrentWeather","data","_data$coord","coord","_data$main","main","temp","feels_like","temp_min","temp_max","humidity","dt","_data$sys","sys","country","sunrise","sunset","weather","speed","wind","_weather$","details","icon","formatForecastWeather","timezone","daily","hourly","d","formatToLocalTime","day","secs","zone","format","arguments","DateTime","fromSeconds","setZone","toFormat","iconUrlFromCode","code","concat","getFormattedWeatherData","_asyncToGenerator","_callee","formattedCurrentWeather","formattedForecastWeather","_context","exclude","_x","apply","TimeAndLocation","_ref$weather","TemperatureAndDetails","src","alt","toFixed","UilTemperature","UilTear","UilWind","UilSun","UilSunset","Forecast","items","console","log","item","App","query","_useState3","_useState4","_useState5","_useState6","setWeather","useEffect","message","fetchWeather","threshold","formatBackground","ToastContainer","autoClose","theme","newestOnTop","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.838ee1d2.chunk.js","sourcesContent":["import React from 'react'\n\nfunction TopButtons({setQuery}) {\n const cities=[\n    {\n        id:1,\n        title:'London'\n    },\n    {\n        id:2,\n        title:'Sydney'\n    },\n    {\n        id:3,\n        title:'Tokyo'\n    },\n    {\n        id:4,\n        title:'Toronto'\n    },\n    {\n        id:5,\n        title:'Paris'\n    },\n ]\n\n  return (\n    <div className='flex items-center justify-around my-6'>\n     {cities.map((city)=>(\n        <button key={city.id} className='text-white text-lg font-medium' onClick={()=> setQuery({q:city.title})}>{city.title}</button>\n     ))}\n    </div>\n  )\n}\n\nexport default TopButtons\n","import React, { useState } from \"react\";\nimport { UilSearch, UilLocationPoint } from \"@iconscout/react-unicons\";\nimport { toast } from \"react-toastify\";\nfunction Inputs({ setQuery, units, setUnits }) {\n  const [city, setCity] = useState(\"\");\n  const handleUnitsChange = (e) => {\n    const selectedUnit = e.currentTarget.name;\n    if (units !== selectedUnit) setUnits(selectedUnit);\n  };\n  const handleSearchClick = () => {\n    if (city !== \"\") setQuery({ q: city });\n  };\n  const handleLocationClick = () => {\n    if (navigator.geolocation) {\n      toast.info(\"Fetching users location.\");\n      navigator.geolocation.getCurrentPosition((position) => {\n        toast.success(\"Location fetched!\");\n        let lat = position.coords.latitude;\n        let lon = position.coords.longitude;\n\n        setQuery({\n          lat,\n          lon,\n        });\n      });\n    }\n  };\n  return (\n    <div className='flex flex-row justify-center my-6'>\n      <div className='flex flex-row w-3/4 items-center justify-center space-x-4'>\n        <input\n          type='text'\n          value={city}\n          onChange={(e) => setCity(e.currentTarget.value)}\n          placeholder='Search for city...'\n          className='text-xl font-light p-2 w-full shadow-xl focus:outline-none capitalize placeholder:lowercase'\n        />\n\n        <UilSearch\n          size={25}\n          className='text-white cursor-pointer transition ease-out hover:scale-125'\n          onClick={handleSearchClick}\n        />\n        <UilLocationPoint\n          size={25}\n          className='text-white cursor-pointer transition ease-out hover:scale-125'\n          onClick={handleLocationClick}\n        />\n      </div>\n\n      <div className='flex flex-row w-1/4 items-center justify-center'>\n        <button\n          name='metric'\n          className='text-xl text-white font-light hover:scale-125 transition ease-out'\n          onClick={handleUnitsChange}\n        >\n          °C\n        </button>\n        <p className='text-xl text-white mx-1'>|</p>\n        <button\n          name='imperial'\n          className='text-xl text-white font-light hover:scale-125 transition ease-out'\n          onClick={handleUnitsChange}\n        >\n          °F\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Inputs;\n","import { DateTime } from \"luxon\";\n\nconst API_KEY = \"6b80d80a409b15b7f76592ea71c2328e\";\n\nconst BASE_URL = \"https://api.openweathermap.org/data/2.5\";\n\nconst getWeatherData = (infoType, searchParams) => {\n  const url = new URL(BASE_URL + \"/\" + infoType);\n  url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n  // console.log(url)\n  return fetch(url).then((res) => res.json());\n  // .then((data) => data);\n};\n\nconst formatCurrentWeather = (data) => {\n  const {\n    coord: { lat, lon },\n    main: { temp, feels_like, temp_min, temp_max, humidity },\n    name,\n    dt,\n    sys: { country, sunrise, sunset },\n    weather,\n    wind: { speed },\n  } = data;\n  const { main: details, icon } = weather[0];\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed,\n  };\n};\n\nconst formatForecastWeather = (data) => {\n  let { timezone, daily, hourly } = data;\n  daily = daily.slice(1, 6).map((d) => {\n    return {\n      title: formatToLocalTime(d.dt, timezone, \"ccc\"),\n      temp: d.temp.day,\n      icon: d.weather[0].icon,\n    };\n  });\n  hourly = hourly.slice(1, 6).map((d) => {\n    return {\n      title: formatToLocalTime(d.dt, timezone, \"hh:mm a\"),\n      temp: d.temp,\n      icon: d.weather[0].icon,\n    };\n  });\n  return { timezone, daily, hourly };\n};\n\nconst getFormattedWeatherData = async (searchParams) => {\n  const formattedCurrentWeather = await getWeatherData(\n    \"weather\",\n    searchParams\n  ).then(formatCurrentWeather);\n\n  const { lat, lon } = formattedCurrentWeather;\n  const formattedForecastWeather = await getWeatherData(\"onecall\", {\n    lat,\n    lon,\n    exclude: \"current,minutely,alerts\",\n    units: searchParams.units,\n  }).then(formatForecastWeather);\n\n  return { ...formattedCurrentWeather, ...formattedForecastWeather };\n};\n\nconst formatToLocalTime = (\n  secs,\n  zone,\n  format = \"cccc, dd LLL yyyy' | Local time: 'hh:mm a\"\n) => DateTime.fromSeconds(secs).setZone(zone).toFormat(format);\n\nconst iconUrlFromCode = (code) =>\n  `http://openweathermap.org/img/wn/${code}@2x.png`;\n\nexport default getFormattedWeatherData;\n\nexport { formatToLocalTime, iconUrlFromCode };\n","import React from \"react\";\nimport { formatToLocalTime } from \"../services/WeatherService\";\nfunction TimeAndLocation({ weather: { dt, timezone, name, country } }) {\n  return (\n    <div>\n      <div className='flex items-center justify-center my-6'>\n        <p className='text-white text-xl font-extralight'>\n          {formatToLocalTime(dt, timezone)}\n        </p>\n      </div>\n\n      <div className='flex items-center justify-center my-3'>\n        <p className='text-white text-3xl font-medium'>\n          {`${name},${country}`}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeAndLocation;\n","import React from \"react\";\nimport {\n  UilTemperature,\n  UilTear,\n  UilWind,\n  UilSun,\n  UilSunset,\n} from \"@iconscout/react-unicons\";\nimport { formatToLocalTime, iconUrlFromCode } from \"../services/WeatherService\";\nfunction TemperatureAndDetails({\n  weather: {\n    details,\n    icon,\n    temp,\n    temp_min,\n    temp_max,\n    sunrise,\n    sunset,\n    speed,\n    humidity,\n    feels_like,\n    timezone,\n  },\n}) {\n  return (\n    <div>\n      <div className='flex items-center justify-center py-6 text-xl text-cyan-300'>\n        <p>{details}</p>\n      </div>\n\n      <div className='flex flex-row items-center justify-between text-white py-3'>\n        <img src={iconUrlFromCode(icon)} alt='' className='w-20' />\n        <p className='text-5xl'>{`${temp.toFixed()}°`}</p>\n        <div className='flex flex-col space-y-2'>\n          <div className='flex font-light text-sm items-center justify-center'>\n            <UilTemperature size={18} className='mr-1' />\n            Real Feel:\n            <span className='font-medium ml-1'>{`${feels_like.toFixed()}°`}</span>\n          </div>\n          <div className='flex font-light text-sm items-center justify-center'>\n            <UilTear size={18} className='mr-1' />\n            Humidity:\n            <span className='font-medium ml-1'>{`${humidity.toFixed()}%`}</span>\n          </div>\n          <div className='flex font-light text-sm items-center justify-center'>\n            <UilWind size={18} className='mr-1' />\n            Wind:\n            <span className='font-medium ml-1'>{`${speed.toFixed()}km/h`}</span>\n          </div>\n        </div>\n      </div>\n\n      <div className='flex flex-row items-center justify-center space-x-2 text-white text-sm py-3'>\n        <UilSun />\n        <p className='font-light'>\n          Rise:\n          <span className='font-medium ml-1'>\n            {formatToLocalTime(sunrise, timezone, \"hh:mm a\")}\n          </span>\n        </p>\n        <p className='font-light'>|</p>\n        <UilSunset />\n        <p className='font-light'>\n          Set:\n          <span className='font-medium ml-1'>\n            {formatToLocalTime(sunset, timezone, \"hh:mm a\")}\n          </span>\n        </p>\n        <p className='font-light'>|</p>\n        <UilSun />\n        <p className='font-light'>\n          High:\n          <span className='font-medium ml-1'>{`${temp_max.toFixed()}°`}</span>\n        </p>\n        <p className='font-light'>|</p>\n        <UilSun />\n        <p className='font-light'>\n          Low:\n          <span className='font-medium ml-1'>{`${temp_min.toFixed()}°`}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default TemperatureAndDetails;\n","import React from \"react\";\nimport { iconUrlFromCode } from \"../services/WeatherService\";\n\nfunction Forecast({ title, items }) {\n  console.log(items);\n  return (\n    <div>\n      <div className='flex items-center justify-start mt-6'>\n        <p className='text-white font-medium uppercase'>{title}</p>\n      </div>\n\n      <hr className='my-2' />\n      <div className='flex flex-row items-center justify-between text-white'>\n        {items.map((item) => (\n          <div className='flex flex-col items-center justify-center'>\n            <p className='font-light text-sm'>{item.title}</p>\n            <img\n              src={iconUrlFromCode(item.icon)}\n              className='w-12 my-1'\n              alt=''\n            />\n            <p className='font-medium'>{`${item.temp.toFixed()}°`}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Forecast;\n","import \"./App.css\";\nimport React from \"react\";\nimport TopButtons from \"./components/TopButtons\";\nimport Inputs from \"./components/Inputs\";\nimport TimeAndLocation from \"./components/TimeAndLocation\";\nimport TemperatureAndDetails from \"./components/TemperatureAndDetails\";\nimport Forecast from \"./components/Forecast\";\nimport getFormattedWeatherData from \"./services/WeatherService\";\nimport { useEffect, useState } from \"react\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [query, setQuery] = useState({ q: \"berlin\" });\n  const [units, setUnits] = useState(\"metric\");\n  const [weather, setWeather] = useState(null);\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const message = query.q ? query.q : \"current location\";\n      toast.info(\"Fetching weather for \" + message);\n      await getFormattedWeatherData({ ...query, units }).then((data) => {\n        toast.success(\n          `Successfully fetched weather for ${data.name}, ${data.country}`\n        );\n        setWeather(data);\n      });\n    };\n    fetchWeather();\n  }, [query, units]);\n\n  const formatBackground = () => {\n    if (!weather) return \"from-cyan-700 to-blue-700\";\n    const threshold = units === \"metric\" ? 20 : 60;\n    if (weather.temp <= threshold) return \"from-cyan-700 to-blue-700\";\n    return \"from-yellow-700 to-orange-700\";\n  };\n\n  return (\n    <div\n      className={`mx-auto max-w-screen-md mt-4 py-5 px-32 bg-gradient-to-br from-cyan-700 to-blue-700 h-fit shadow-xl shadow-gray-400 ${formatBackground()}`}\n    >\n      <TopButtons setQuery={setQuery} />\n      <Inputs setQuery={setQuery} units={units} setUnits={setUnits} />\n\n      {weather && (\n        <div>\n          <TimeAndLocation weather={weather} />\n          <TemperatureAndDetails weather={weather} />\n\n          <Forecast title='hourly forecast' items={weather.hourly} />\n          <Forecast title='daily forecast' items={weather.daily} />\n        </div>\n      )}\n\n      <ToastContainer autoClose={5000} theme='colored' newestOnTop={true} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n\n    <App />\n\n);\n\n\n"],"sourceRoot":""}